/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jgranados.kok.ui;

import com.jgranados.kok.instructions.Instruction;
import com.jgranados.kok.interpreter.lexer.Lexer;
import com.jgranados.kok.interpreter.parser.Parser;
import com.jgranados.kok.interpreter.symbolstable.SymbolsTable;
import java.awt.event.KeyEvent;
import java.io.StringReader;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jose
 */
public class KokFrame extends javax.swing.JFrame {

    private static final String PREFIX = "$ > ";
    private static final String LINE = "\n";
    private Lexer myLexer;
    private Parser myParser;
    private StringReader reader;
    private int lastEnterEvent;
    private PanelDraw panelDraw;
    private SymbolsTable instructionsSymTable;

    /**
     * Creates new form KokFrame
     */
    public KokFrame() {
        panelDraw = new PanelDraw();
        initComponents();
        myLexer = new Lexer(new StringReader(""));
        instructionsSymTable = new SymbolsTable(myLexer.getErrorsList());
        myParser = new Parser(myLexer, instructionsSymTable);
        txtInstructions.setText(PREFIX);
        txtInstructions.requestFocusInWindow();
        this.txtInstructions.setCaretPosition(PREFIX.length());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInstructions = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMessages = new javax.swing.JTextArea();
        scrollpnl = new javax.swing.JScrollPane();
        scrollpnl.setViewportView(panelDraw);
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kok");
        setMaximumSize(null);
        setMinimumSize(new java.awt.Dimension(800, 600));

        jSplitPane1.setResizeWeight(0.5);

        txtInstructions.setColumns(20);
        txtInstructions.setRows(5);
        txtInstructions.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtInstructionsCaretUpdate(evt);
            }
        });
        txtInstructions.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInstructionsKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtInstructions);

        jSplitPane1.setLeftComponent(jScrollPane1);

        txtMessages.setEditable(false);
        txtMessages.setColumns(20);
        txtMessages.setRows(5);
        jScrollPane2.setViewportView(txtMessages);

        jSplitPane1.setRightComponent(jScrollPane2);

        scrollpnl.setBackground(new java.awt.Color(255, 255, 255));

        jMenu1.setText("File");

        jMenuItem1.setText("Click!");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollpnl)
                    .addComponent(jSplitPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollpnl)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtInstructionsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInstructionsKeyReleased
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                String input = this.getCurrentLine();
                this.myLexer.yyreset(new StringReader(input));
                try {
                    List<Instruction> instructions = (List<Instruction>) this.myParser.parse().value;
                    if (this.myLexer.getErrorsList().isEmpty()) {
                        panelDraw.runInstructions(instructions);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(KokFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.txtInstructions.append(PREFIX);
                this.lastEnterEvent = this.calculateLastEnterEvent();
                addMessages(this.myLexer.getErrorsList());

                break;
            case KeyEvent.VK_BACK_SPACE:
                //Avoid accidental remove
                if (this.lastEnterEvent > this.txtInstructions.getText().length()) {
                    this.txtInstructions.append(" ");//Avoid accidental remove
                }
                break;
            case KeyEvent.VK_UP:
                //remember the last command
                /*if (!this.txtInstructions.getText().endsWith(this.lastCommand)) {
        this.txtInstructions.append(this.lastCommand);
        }*/
                break;
            default:
                break;
        }

    }//GEN-LAST:event_txtInstructionsKeyReleased

    private void txtInstructionsCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtInstructionsCaretUpdate
        int position = this.txtInstructions.getText().length();
        if (evt.getDot() < this.lastEnterEvent && position >= this.lastEnterEvent) {
            this.txtInstructions.setCaretPosition(position);
        }
    }//GEN-LAST:event_txtInstructionsCaretUpdate

    public int calculateLastEnterEvent() {
        return this.txtInstructions.getText().lastIndexOf(PREFIX) + PREFIX.length();
    }

    public String getCurrentLine() {
        String input = this.txtInstructions.getText();
        this.lastEnterEvent = this.calculateLastEnterEvent();
        String instructionLine = input.substring(lastEnterEvent, input.length());
        return instructionLine;
    }

    public void addMessages(List<String> messages) {
        if (!messages.isEmpty()) {
            this.txtMessages.append(String.join(LINE, messages) + LINE);
            messages.clear();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JScrollPane scrollpnl;
    private javax.swing.JTextArea txtInstructions;
    private javax.swing.JTextArea txtMessages;
    // End of variables declaration//GEN-END:variables
}
